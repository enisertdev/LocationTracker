@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />


    <style>
        #map {
            height: 650px;
        }
    </style>
    <title>Geolocation</title>
</head>
<body>
<partial name="_NavbarPartial"/>
<partial name="_ToastPartial"/>
<div id="map"></div>
<script>
        addEventListener("DOMContentLoaded" ,async () =>{
            const isValid = await isUserValid();
            console.log(isValid);
            if(!isValid)
            {
             window.location.href= "/Auth/Login";
            }
        });

         var map;
         var markers = {};
      

         async function initMap()
         {
             map = L.map('map', {
                 center: [36.84396233790365, 28.262931597593088],
                 zoom: 15
             });
             L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                 maxZoom: 19,
                 attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
             }).addTo(map);

              var locations = await getAllLocations();

              locations.forEach((location) => {
                  const userid = location.userId;
                  const marker = L.marker([location.latitude, location.longitude]);

                  marker.bindPopup(`<b>Ad: ${location.name.toUpperCase()} <br><br> ${location.phonenumber}`, {
                      autoPan: false
                  }).openPopup();
                  marker.addTo(map);

                  markers[userid] = marker;
              });
        }
         window.onload = initMap;

         async function getAllLocations()
         {
             const jwt = localStorage.getItem("jwt")
             const response = await fetch("https://locationapi.imaginewebsite.com.tr/api/locations",{
                 headers:{
                      "Content-Type": "application/json",
                      "Authorization": `Bearer ${jwt}`
                 }
             });
             const json = await response.json();
             if(!response.ok) return json.status;

             return json;
         }

         async function isUserValid(){
             const jwt = localStorage.getItem("jwt");
             if(!jwt) return false;
             console.log(jwt);
             const response = await fetch("https://locationapi.imaginewebsite.com.tr/api/auth/validate",
             {
                 headers:{
                     "Content-Type":"application/json",
                     "Authorization":`Bearer ${jwt}`
                 }
             });
             if(!response.ok) return false;
             return true;


         }
    </script>
<script src="~/js/signalr/signalr.min.js"></script>
<script src="~/js/hub.js?v=1"></script>

</body>
</html>
