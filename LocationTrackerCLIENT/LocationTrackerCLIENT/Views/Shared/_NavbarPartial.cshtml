<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management Navbar</title>
    <link rel="stylesheet" href="~/css/navbar.css"/>
</head>
<body>
    <nav class="navbar">
        <div class="logo">User Management</div>
        <div class="nav-buttons">
            <button id="listUsersBtn" class="nav-button"><span class="server-user-text">List All Users</span></button>
            <button id="createclientUserBtn" class="nav-button"><span class="client-user-text">Add Client User</span></button>
            <button id="createClientUserBtn" class="nav-button"><span class="server-user-text">Add Server User</span></button>
            <button id="logoutBtn" class="nav-button"><span class="logout-text">Logout</span></button>
        </div>
    </nav>
    <div class="modal fade" id="clientUserModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create User</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Name</label>
                            <input type="email" class="form-control" id="clientUserName">
                        </div>
                        <div class="mb-3">
                            <label for="message-text" class="col-form-label">Phone Number</label>
                            <input type="number" class="form-control" id="clientUserPhoneNumber">
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="createclientUserModalBtn" type="button" class="btn btn-primary">Create Client User</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="systemUserModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create System User</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Will be added later.
                    @* <form>
                    <div class="mb-3">
                        <label for="recipient-name" class="col-form-label">Name</label>
                        <input type="email" class="form-control" id="clientUserName">
                    </div>
                    <div class="mb-3">
                        <label for="message-text" class="col-form-label">Phone Number</label>
                        <input type="number" class="form-control" id="clientUserPhoneNumber">
                    </div>

                </form> *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="createServerUserModalBtn" type="button" class="btn btn-primary">Create Server User</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="userListModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Manage Users</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div id="modalBody" class="modal-body">
                    <table class="table table-striped">
                        <thead>
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Phone Number</th>
                        </tr>
                        </thead>
                        <tbody id="userListBody">

                        </tbody>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    @*<button id="createServerUserModalBtn" type="button" class="btn btn-primary">Create Server User</button>*@ 
                </div>
            </div>
        </div>
    </div>
    <partial name="_ToastPartial" />

    <script>
        const logoutBtn = document.getElementById("logoutBtn");
        const createClientUserBtn = document.getElementById("createclientUserBtn");
        const createServerUserBtn = document.getElementById("createClientUserBtn");

        const clientUserModal = new bootstrap.Modal(document.getElementById("clientUserModal"));
        const createclientUserModalBtn = document.getElementById("createclientUserModalBtn");

        const systemUserModal = new bootstrap.Modal(document.getElementById("systemUserModal"));

        const listUsersBtn = document.getElementById("listUsersBtn");
        const listUsersModal = new bootstrap.Modal(document.getElementById("userListModal"));
        const userList = document.getElementById("userListBody");


        listUsersBtn.addEventListener("click", async () =>{
            await appendUserList();
            listUsersModal.show();
        });

        createClientUserBtn.addEventListener("click",() =>{
            clientUserModal.show();
        });

        createServerUserBtn.addEventListener("click",() =>{
            systemUserModal.show();
        })

        createclientUserModalBtn.addEventListener("click", async () =>{
            await createclientUser();
        });

        logoutBtn.addEventListener("click", () => {
            localStorage.clear();
            window.location.href = "/Auth/Login";
        });


        async function createclientUser()
        {
            const name = document.getElementById("clientUserName").value;
            const phoneNumber = document.getElementById("clientUserPhoneNumber").value;

            if(!name || !phoneNumber)
            {
                showToast("ERROR", "fill all fields.");
                console.log("asd");
                return;
            }

            const jwt = localStorage.getItem("jwt")
            const response = await fetch("https://locationapi.imaginewebsite.com.tr/api/users/clientuser",{
                method: "POST",
                headers:{
                    "Content-Type":"application/json",
                    "Authorization":`Bearer ${jwt}`
                },
                body: JSON.stringify({name: name, phoneNumber: phoneNumber})
            });

            const json = await response.json();
            if(!response.ok)
            {
                console.log(json.message);
            }
            showToast("SUCCESS", json.message);
            clientUserModal.hide();
        }

        async function getAllUsers()
        {
            try
            {
                const jwt = localStorage.getItem("jwt");
                const response = await fetch("https://locationapi.imaginewebsite.com.tr/api/users",{
                    headers:{
                        "Authorization":`Bearer ${jwt}`
                    }
                });

                const json = await response.json();
                if(!response.ok)
                {
                    console.log(json.message);
                    return;
                }

                console.log(json);
                return json;
            }
            catch(err)
            {
                console.log(err);
            }

        }

        async function appendUserList(){
            userList.innerHTML = "";

            const users = await getAllUsers();
            users.forEach(user =>{
                const tr = document.createElement("tr");
                tr.innerHTML = `
                <td>${user.id}</td>
                <td>${user.name}</td>
                <td>${user.phoneNumber}</td>
                <td>
                <button class ="btn btn-danger delete-user-btn" data-user-id=${user.id}>Delete</button>
                </td>
                `
                userList.appendChild(tr);
            });

            document.querySelectorAll(".delete-user-btn").forEach(btn =>{
                btn.addEventListener("click", async()=>{
                    const userId = btn.dataset.userId;
                    await deleteUser(userId);
                })
            })
        }

        async function deleteUser(userId)
        {
            const jwt = localStorage.getItem("jwt");
            const response = await fetch(`https://locationapi.imaginewebsite.com.tr/api/users/${userId}`,{
                method: "DELETE",
                headers:{
                    "Authorization":`Bearer ${jwt}`
                }
            });

            const json = await response.json();
            if(!response.ok)
            {
                showToast("ERROR", json.message);
                return;
            }

            showToast("SUCCESS", "User has been deleted.");
            await appendUserList();
        }
    </script>
</body>

</html>